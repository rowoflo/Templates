cmake_minimum_required(VERSION 3.2)
project(___project_name___)

###########################################
#       Compilation flags
###########################################
set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++11" )

###########################################
#       Testing and Code Coverage
###########################################
enable_testing()
add_custom_target(check
                  COMMAND ${CMAKE_CTEST_COMMAND} -V -T Test
                  DEPENDS ___project_name____test)

OPTION( ENABLE_CODECOVERAGE "Enable code coverage testing support" )

if ( ENABLE_COVERAGE )

    if ( NOT DEFINED CODECOV_HTMLOUTPUTDIR )
        set( CODECOV_HTMLOUTPUTDIR ./coverage_report )
    endif ( NOT DEFINED CODECOV_HTMLOUTPUTDIR )

    find_program( CODECOV_GCOVR gcovr )
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} --coverage")

    add_custom_target(coverage
                      COMMAND ${CMAKE_COMMAND} -E make_directory ${CODECOV_HTMLOUTPUTDIR}
                      COMMAND ${CODECOV_GCOVR} -s -r ${CMAKE_SOURCE_DIR} --exclude=".*/test/.*" -u --html --html-details -o ${CODECOV_HTMLOUTPUTDIR}/index.html
                      DEPENDS check)

endif (ENABLE_COVERAGE )

###########################################
#       Sub-directories
###########################################
add_subdirectory(src)
add_subdirectory(test)
add_subdirectory(examples)
